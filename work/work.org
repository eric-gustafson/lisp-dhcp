#+title: work

* TODO read-from-octets
  
** TODO search for magic cookie from file

** TODO change the name of the parser we generated to dhcp-static-header-*

** TODO add a section to parse dhcp options

** TODO add a method get-options
   returns a sequence from the packet after the *magic*

* TODO Add a section to deconstruct the captured packet

* TODO create a commissioning network
  This is a virtual interface with a network allocated from *network-malloc*

** TODO verfify that this shows up on RBPI

** TODO up/down this network
   (defmethod net-up ((obj netobj))
    )

   
** TODO allocate IP and network info


* TODO Add a section to construct a reply
  Use the *commissioning-network* info above


* TODO add files to command line program

* TODO add support for different types of strings
  When generating code from the org-babel tables, handle the following
  strings by adding more keywords

  - fixed
  - pascal
  - c


* TODO newer versions of RBPI support PXE boots
  This is our over-the-air update.  

* DONE Use cl-async?
  Figure out if we really want to do this.  Why not just use select?
  In the future, we can inhance by creating an event using the file
  descriptor


* DONE Receive and decode dhcp broadcast
  To send and receive broadcast

** netmask
   Be sure that netmask is correct. in windows mask for broadcast
    packets does not matters, but not in linux.

** wildcard address
   bind socket to INADDR_ANY

** setsockopt
   setsockopt to BROADCAST

** sendto
   call sendto with sendaddr.sin_addr.s_addr = inet_addr("your_interface_broadcast_address")

   call sento several times for each interface with its broadcast ip address.

** call recvfrom. any time before calling recvfrom, set up length parameter
  
