#+title: work
#+startup: overview


* Problem Statement
  It's not going well, with regard to having tools to *greatly* speed
  up protocol development.  

  I believe that the serialize and deserialize routines are wrong.



[[/ssh:root@192.168.1.2:/]]



#+begin_src lisp
  (send-and-receive-dhcp-pdu-simple)
#+end_src

#+RESULTS:
: 1


  Remote slime
#+BEGIN_SRC sh
  /usr/bin/gnome-terminal  -e 'ssh -L 4010:localhost:4010 root@192.168.1.7' &
#+END_SRC

#+RESULTS:
: # Failed to parse arguments: Unknown option -L



* Today
  [[file:../devdocs/]]
  [[file:../dhcp-server.lisp]]



255.255.255.252 64 nets      N.N.N.0     N.N.N.1-2        N.N.N.3
6 bit Class C   2            N.N.N.4     N.N.N.5-6        N.N.N.7
14 bit Class B               N.N.N.8     N.N.N.9-10       N.N.N.11
                             N.N.N.244   N.N.N.245-246    N.N.N.247
                             N.N.N.248   N.N.N.249-250    N.N.N.251
                             N.N.N.252   N.N.N.253-254    N.N.N.255


#<CIDR-NET #(10 0 12 0)/24>
#+begin_src lisp
    (mapcar
     ;;#'numex:num->octets
     #'(lambda(obj)
	 (list (format nil "~a"  (numex:num->octets (ipnum obj)))
	       (format nil "~a"  (numex:num->octets (broadcast obj))
	       (format nil "~x"  (broadcast obj))
	       )
	 ))
     (dhcp::subnets *this-net* :cidr 30)
     )
#+end_src

#+RESULTS:
| (10 0 1 1)   | A000103 |
| (10 0 1 5)   | A000107 |
| (10 0 1 9)   | A00010B |
| (10 0 1 13)  | A00010F |
| (10 0 1 17)  | A000113 |
| (10 0 1 21)  | A000117 |
| (10 0 1 25)  | A00011B |
| (10 0 1 29)  | A00011F |
| (10 0 1 33)  | A000123 |
| (10 0 1 37)  | A000127 |
| (10 0 1 41)  | A00012B |
| (10 0 1 45)  | A00012F |
| (10 0 1 49)  | A000133 |
| (10 0 1 53)  | A000137 |
| (10 0 1 57)  | A00013B |
| (10 0 1 61)  | A00013F |
| (10 0 1 65)  | A000143 |
| (10 0 1 69)  | A000147 |
| (10 0 1 73)  | A00014B |
| (10 0 1 77)  | A00014F |
| (10 0 1 81)  | A000153 |
| (10 0 1 85)  | A000157 |
| (10 0 1 89)  | A00015B |
| (10 0 1 93)  | A00015F |
| (10 0 1 97)  | A000163 |
| (10 0 1 101) | A000167 |
| (10 0 1 105) | A00016B |
| (10 0 1 109) | A00016F |
| (10 0 1 113) | A000173 |
| (10 0 1 117) | A000177 |
| (10 0 1 121) | A00017B |
| (10 0 1 125) | A00017F |
| (10 0 1 129) | A000183 |
| (10 0 1 133) | A000187 |
| (10 0 1 137) | A00018B |
| (10 0 1 141) | A00018F |
| (10 0 1 145) | A000193 |
| (10 0 1 149) | A000197 |
| (10 0 1 153) | A00019B |
| (10 0 1 157) | A00019F |
| (10 0 1 161) | A0001A3 |
| (10 0 1 165) | A0001A7 |
| (10 0 1 169) | A0001AB |
| (10 0 1 173) | A0001AF |
| (10 0 1 177) | A0001B3 |
| (10 0 1 181) | A0001B7 |
| (10 0 1 185) | A0001BB |
| (10 0 1 189) | A0001BF |
| (10 0 1 193) | A0001C3 |
| (10 0 1 197) | A0001C7 |
| (10 0 1 201) | A0001CB |
| (10 0 1 205) | A0001CF |
| (10 0 1 209) | A0001D3 |
| (10 0 1 213) | A0001D7 |
| (10 0 1 217) | A0001DB |
| (10 0 1 221) | A0001DF |
| (10 0 1 225) | A0001E3 |
| (10 0 1 229) | A0001E7 |
| (10 0 1 233) | A0001EB |
| (10 0 1 237) | A0001EF |
| (10 0 1 241) | A0001F3 |
| (10 0 1 245) | A0001F7 |
| (10 0 1 249) | A0001FB |
| (10 0 1 253) | A0001FF |

#+begin_src lisp
  (length (dhcp::subnets *this-net* 2))
#+end_src

#+RESULTS:
: 126

#+begin_src lisp
    (defvar *subnets* 
      (mapcar #'(lambda(ip)
		  (cons ip (get-universal-time)))
		  (dhcp::subnets *this-net* 2))
      )
    (defparameter *cidr-subnets* 
      (mapcar #'(lambda(snip)
		  (make-instance 'cidr-net
		      :ipnum snip
		      :cidr 30
		      :mask (logand #xffffffff (lognot #b11))
		      )
		  )
		  (mapcar #'car *subnets*)))
#+end_src

#+RESULTS:
: *CIDR-SUBNETS*

#+begin_src lisp
  (dhcp::subnet-info *this-net* 2)
#+end_src

#+RESULTS:
| :NUM-NETS | 126 |


* ORG GUIS

** OS Net Interfaces
*** List links
    #+begin_src lisp :results output
     (loop :for obj in (lsa:ip-link-objs) do
       (format t "~5a,~10A,~10A~%" (lsa:name obj) (lsa:state obj) (lsa:mac obj))
       )
   
    #+end_src

    #+RESULTS:
    : lo   ,UNKNOWN   ,00:00:00:00:00:00
    : wlo1 ,UP        ,48:45:20:ef:5b:e6

*** List addresses
    #+begin_src lisp :results output
      (loop :for obj in (lsa:ip-addr-objs) do
	(format t "~5a,~10A,~20A,~20a,~10A~%" (lsa:name obj) (lsa:state obj) (lsa:mac obj) (lsa:ltype obj) (lsa:addr obj))
       )   
    #+end_src

    #+RESULTS:
    : lo   ,UNKNOWN   ,00:00:00:00:00:00   ,link/loopback       ,127.0.0.1/8
    : wlo1 ,UP        ,48:45:20:ef:5b:e6   ,link/ether          ,192.168.1.3/24


** cidr-subnets
   #+begin_src lisp :result 
	 (cons
	  (list "iface addr" "cidr block" "netmask" "netmask hex")
	   (mapcar 
	    #'(lambda(obj)
		(list (numex:num->octets (ipnum obj))
		      (format nil "/~a" (cidr obj))
		      (numex:num->octets (mask obj))
		      (format nil "~X" (logand #xffffffff (mask obj)))
		      ))
	    ,*cidr-subnets*)))
   #+end_src

   #+RESULTS:
   | iface addr    | cidr block | netmask           | netmask hex |
   | (10 0 12 1)   | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 3)   | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 5)   | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 7)   | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 9)   | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 11)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 13)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 15)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 17)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 19)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 21)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 23)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 25)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 27)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 29)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 31)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 33)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 35)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 37)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 39)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 41)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 43)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 45)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 47)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 49)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 51)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 53)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 55)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 57)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 59)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 61)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 63)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 65)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 67)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 69)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 71)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 73)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 75)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 77)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 79)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 81)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 83)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 85)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 87)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 89)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 91)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 93)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 95)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 97)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 99)  | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 101) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 103) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 105) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 107) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 109) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 111) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 113) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 115) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 117) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 119) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 121) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 123) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 125) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 127) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 129) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 131) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 133) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 135) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 137) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 139) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 141) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 143) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 145) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 147) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 149) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 151) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 153) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 155) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 157) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 159) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 161) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 163) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 165) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 167) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 169) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 171) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 173) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 175) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 177) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 179) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 181) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 183) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 185) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 187) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 189) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 191) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 193) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 195) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 197) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 199) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 201) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 203) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 205) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 207) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 209) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 211) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 213) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 215) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 217) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 219) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 221) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 223) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 225) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 227) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 229) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 231) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 233) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 235) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 237) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 239) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 241) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 243) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 245) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 247) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 249) | /30        | (255 255 255 252) | FFFFFFFC    |
   | (10 0 12 251) | /30        | (255 255 255 252) | FFFFFFFC    |




** dhcp testing
   #+begin_src lisp
   (ip-allocated? *this-net*  (+ 1 (car *dhcp-nets*)))
   #+end_src

   #+RESULTS:
   : #<DHCP-ADDRESS #(), 10.  0.  0.  1,4141,NIL>
